from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bb15b2a14d4a'
down_revision = '6f792de19074'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('warehouses',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('location', sa.String(), nullable=False),
        sa.Column('capacity', sa.Float(), nullable=False),
        sa.Column('available_space', sa.Float(), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_warehouses_id'), 'warehouses', ['id'], unique=False)
    
    op.create_table('stock_levels',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('warehouse_id', sa.Integer(), nullable=False),
        sa.Column('product_id', sa.Integer(), nullable=False),
        sa.Column('stock_quantity', sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
        sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stock_levels_id'), 'stock_levels', ['id'], unique=False)
    
    # Add the timestamp column as nullable first to avoid integrity issues
    op.add_column('user_interactions', sa.Column('timestamp', sa.DateTime(), nullable=True))

    # Backfill existing rows with the current timestamp (or another default)
    op.execute(
        "UPDATE user_interactions SET timestamp = NOW() WHERE timestamp IS NULL"
    )
    
    # Alter the column to be non-nullable
    op.alter_column('user_interactions', 'timestamp', nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user_interactions', 'timestamp')
    op.drop_index(op.f('ix_stock_levels_id'), table_name='stock_levels')
    op.drop_table('stock_levels')
    op.drop_index(op.f('ix_warehouses_id'), table_name='warehouses')
    op.drop_table('warehouses')
    # ### end Alembic commands ###
